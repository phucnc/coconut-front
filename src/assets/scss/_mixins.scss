/*
ðŸŒŸ common mixins
*/
/*
convert line-height & letter-spacing px values into relative value.
px-based values can be extracted from Abstract. Always use this to define line-height & letter-spacing
If cutLineSpace=true, the spacing the top of first-line & the bottom of last-line caused by line-height will be killed.
--------------------------------------------------------- */
@mixin u-fz($fontSizePx: false, $lineHeightPx: false, $letterSpacingPx: false, $cutLineSpace: false) {
  @if ($fontSizePx) {
    font-size: $fontSizePx + px;
  }

  @if ($lineHeightPx) {
    line-height: ($lineHeightPx / $fontSizePx);
  }

  @if ($letterSpacingPx) {
    letter-spacing: ($letterSpacingPx / $fontSizePx) + em;
  }

  @if ($cutLineSpace) {
    &:before,
    &:after {
      display: block;
      content: '';
    }

    $_marginVal: ($lineHeightPx - $fontSizePx) * -0.5;

    &:before {
      margin-bottom: $_marginVal + px;
    }

    &:after {
      margin-top: $_marginVal + px;
    }
  }
}

@mixin u-fw-b {
  font-weight: 700;
}

@mixin u-fw-lb {
  font-weight: 600;
}

@mixin u-fw-n {
  font-weight: 300;
}

@mixin u-ff-basic {
  font-family: NotoSans;
}
/* ellipsis with
--------------------------------------------------------- */
@mixin ellipsisInline {
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin pc-large() {
  @media (min-width: $WIDTH-PC-LARGE) {
    @content;
  }
}

@mixin pc() {
  @media (min-width: $WIDTH-PC + 1px) {
    @content;
  }
}

@mixin pcFixedContent() {
  @media (min-width: 1204px) {
    @content;
  }
}

@mixin tab() {
  @media (min-width: $WIDTH-XS) and (max-width: 1024px) {
    @content;
  }
}

@mixin sp() {
  @media (max-width: 840px) {
    @content;
  }
}
@mixin smd() {
  @media (min-width: 600px) and (max-width: 840px) {
    @content;
  }
}

@mixin mld() {
  @media (min-width: 1050px) and (max-width: 1420px) {
    @content;
  }
}

@mixin smdl() {
  @media (min-width: 700px) and (max-width: 800px) {
    @content;
  }
}
@mixin sml() {
  @media (min-width: 1000px) {
    @content;
  }
}
@mixin lg() {
  @media (min-width: 1800px) {
    @content;
  }
}
@mixin lgland() {
  @media (min-width: 1800px) and (orientation: landscape) and (max-height: 1050px) {
    @content;
  }
}
@mixin md() {
  @media (min-width: 500px) and (max-width: 1450px)  and (orientation: landscape)  {
    @content;
  }
}
@mixin mg() {
  @media (min-width: 1500px) and (max-width: 1764px){
    @content;
  }
}
@mixin mgland() {
  @media (min-width: 1500px) and (max-width: 1764px) and (max-height: 850px){
    @content;
  }
}
@mixin mgland14() {
  @media (min-width: 1380px) and (max-height: 750px){
    @content;
  }
}
@mixin sb() {
  @media (min-width: 416px) and (max-width: 430px) {
    @content;
  }
}

@mixin spFixedContent() {
  @media (max-width: 1024px) {
    @content;
  }
}

@mixin customScrollbar() {
  &::-webkit-scrollbar {
    width: 0px!important;
    height: 0px!important;
    background: transparent;
  }
  /* Track */
  &::-webkit-scrollbar-track {
    border-radius: 2.5px;
  }
  /* Handle */
  &::-webkit-scrollbar-thumb {
    background: $COLOR-LIGHTGRAY;
    border-radius: 2.5px;
  }
  /* Handle on hover */
  &::-webkit-scrollbar-thumb:hover {
    background: $COLOR-GRAY;
    opacity: 0.7;
  }
}
body ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 0px;
  height: 0px!important;
}